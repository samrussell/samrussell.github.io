{"version":3,"sources":["Answers.js","GrammarTestReducer.js","BaseContext.js","Radio.js","Styles.js","RadioButton.js","GrammarTestCorrectAnswer.js","GrammarHelperButton.js","GrammarTestWrongAnswer.js","GrammarExplanation.js","GrammarTestCase.js","GrammarTest.js","Lesson1.js","Index.js","App.js","web-build/register-service-worker.js"],"names":["tests","require","shuffle","a","j","x","i","length","Math","floor","random","tagMap","getRemainingChoices","alreadyChosen","max","remainingChoices","has","push","buildAnswers","Set","currentAnswerIndex","add","test","wordDefinition","declensionMap","declensions","Array","from","Object","entries","map","entry","correctAnswer","all_answers","answer","prompt","replace","correctSentence","selectedAnswer","checkAnswers","translation","explanation","allAnswers","word","GrammarTestReducer","state","action","type","showGrammarHelp","BaseContext","createContext","Radio","props","Fragment","Consumer","dispatch","React","Children","children","child","displayName","cloneElement","buttonClicked","onPress","selected","id","Styles","StyleSheet","create","appContainer","backgroundColor","alignItems","padding","flex","appBody","appFooter","footerLinkText","justifyContent","textAlign","fontSize","color","grammarTestContainer","flexDirection","grammarTestCasePromptContainer","grammarTestCasePromptText","fontWeight","grammarTestCaseTranslationText","grammarTestCaseContainer","grammarTestExplanationHeader","grammarExplanationSubHeaderText","grammarTestExplanationBody","grammarTestAnswerExplanationText","tableRow","alignSelf","tableCell","tableHeading","buttonText","margin","buttonSelected","elevation","borderRadius","buttonUnselected","RadioButton","this","TouchableOpacity","View","style","Text","title","Component","GrammarTestCorrectAnswer","Button","GrammarHelperButton","size","icon","faQuestionCircle","GrammarTestWrongAnswer","GrammarExplanation","gender","partOfSpeech","sn","pn","sa","pa","sd","pd","sg","pg","sl","pl","si","pi","sv","pv","initialState","GrammarTestQuestion","key","GrammarTestCase","useReducer","Provider","value","GrammarTest","Lesson1","match","useRouteMatch","exact","path","to","Index","App","Platform","OS","Analytics","dr","document","referrer","hit","PageHit","component","Linking","openURL","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.bedad092.chunk.js","sourcesContent":["const tests = require('./grammartests.json')\n//const tests = require('./polishgrammartests.json')\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n\nconst tagMap = {\n  \"sv\": \"Singular vocative\",\n  \"sn\": \"Singular nominative\",\n  \"sl\": \"Singular locative\",\n  \"si\": \"Singular instrumentive\",\n  \"sg\": \"Singular genitive\",\n  \"sd\": \"Singular dative\",\n  \"sa\": \"Singular accusative\",\n  \"pv\": \"Plural vocative\",\n  \"pn\": \"Plural nominative\",\n  \"pl\": \"Plural locative\",\n  \"pi\": \"Plural instrumentive\",\n  \"pg\": \"Plural genitive\",\n  \"pd\": \"Plural dative\",\n  \"pa\": \"Plural accusative\",\n}\n\nconst getRemainingChoices = (alreadyChosen, max) => {\n  let remainingChoices = []\n  for(var i=0; i<max; i++){\n    if(!alreadyChosen.has(i)){\n      remainingChoices.push(i)\n    }\n  }\n  return remainingChoices\n}\n\nconst buildAnswers = (alreadyChosen) => {\n    let remainingChoices = getRemainingChoices(alreadyChosen, tests[\"tests\"].length)\n    if(remainingChoices.length == 0){\n      alreadyChosen = new Set()\n      remainingChoices = getRemainingChoices(alreadyChosen, tests[\"tests\"].length)\n    }\n    let currentAnswerIndex = remainingChoices[Math.floor(Math.random()*remainingChoices.length)];\n    alreadyChosen.add(currentAnswerIndex)\n    let test = tests[\"tests\"][currentAnswerIndex];\n    let wordDefinition = tests[\"words\"][test[\"word\"]]\n    let declensionMap = wordDefinition[\"declensions\"];\n    let declensions = Array.from(\n      new Set(\n        Object.entries(\n          wordDefinition[\"declensions\"]\n        ).map(\n          function (entry){\n            return entry[1]\n          }\n        )\n      )\n    )\n    let correctAnswer = declensionMap[test[\"tag\"]]\n    shuffle(declensions);\n\n    // get top 3 answers that aren't the correct one\n    let all_answers = [];\n\n    for(var i=0; all_answers.length<3 && i<declensions.length; i++){\n      let answer = declensions[i];\n      if(answer != correctAnswer){\n        all_answers.push(answer)\n      }\n    }\n\n    all_answers.push(correctAnswer)\n    shuffle(all_answers)\n\n    let prompt = test[\"prompt\"].replace(/\\(\\)/, \"(\" + test[\"word\"] + \")\");\n    let correctSentence = test[\"prompt\"].replace(/\\(\\)/, correctAnswer)\n\n    return {\n      selectedAnswer: null,\n      checkAnswers: false,\n      prompt: prompt,\n      translation: test[\"translation\"],\n      explanation: tagMap[test[\"tag\"]],\n      correctSentence: correctSentence,\n      correctAnswer: correctAnswer,\n      allAnswers: all_answers,\n      word: test[\"word\"],\n      wordDefinition: wordDefinition,\n      alreadyChosen: alreadyChosen,\n    };\n}\n\nexport { buildAnswers }","import { buildAnswers } from './Answers.js'\n\nconst GrammarTestReducer = (state, action) => {\n  switch (action.type) {\n    case 'SELECT_ANSWER':\n      return {\n        ...state,\n        selectedAnswer: action.answer,\n        checkAnswers: true,\n      }\n    case 'SHOW_GRAMMAR_HELP':\n      return {\n        ...state,\n        showGrammarHelp: true,\n      }\n    case 'HIDE_GRAMMAR_HELP':\n      return {\n        ...state,\n        showGrammarHelp: false,\n      }\n    case 'REFRESH':\n      return buildAnswers(state.alreadyChosen)\n    default:\n      return state\n  }\n}\n\nexport default GrammarTestReducer\n","import { createContext } from 'react'\n\nconst BaseContext = createContext()\n\nexport default BaseContext\n","import React, { useReducer } from 'react'\nimport GrammarTestReducer from './GrammarTestReducer.js';\nimport BaseContext from './BaseContext.js'\n\nconst Radio = props => {\n  return (\n    <React.Fragment>\n      <BaseContext.Consumer>\n        {({state, dispatch}) => (\n          React.Children.map(props.children, child => {\n            if (child.type.displayName === 'RadioButton') {\n              return React.cloneElement(child, { buttonClicked: () => {child.props.onPress}, selected: child.props.id == state.selectedAnswer })\n            }\n            return child\n          })\n          )\n        }\n      </BaseContext.Consumer>\n    </React.Fragment>\n  )\n}\n\nexport default Radio","import { StyleSheet } from 'react-native';\n\nconst Styles = StyleSheet.create({\n  appContainer: {\n    backgroundColor: '#fff',\n    alignItems: 'stretch',\n    padding: '5%',\n    flex: 1,\n  },\n  appBody: {\n    flex: 8,\n  },\n  appFooter: {\n    flex: 1,\n  },\n  footerLinkText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    fontSize: 25,\n    color: '#E65100'\n  },\n  grammarTestContainer: {\n    flexDirection: 'column',\n    flex: 1,\n    justifyContent: 'space-around',\n  },\n  grammarTestCasePromptContainer: {\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    flex: 1,\n  },\n  grammarTestCasePromptText: {\n    fontWeight: 'bold',\n    fontSize: 40,\n    textAlign: 'center',\n  },\n  grammarTestCaseTranslationText: {\n    fontSize: 20,\n    textAlign: 'center',\n  },\n  grammarTestCaseContainer: {\n    flex: 2,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  grammarTestExplanationHeader: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  grammarExplanationSubHeaderText: {\n    flex: 1,\n    fontSize: 20,\n  },\n  grammarTestExplanationBody: {\n    flex: 4,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  grammarTestAnswerExplanationText: {\n    fontSize: 20,\n    textAlign: 'center',\n  },\n  tableRow: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignSelf: 'stretch',\n  },\n  tableCell: {\n    flex: 1,\n    alignSelf: 'stretch',\n  },\n  tableHeading: {\n    flex: 1,\n    alignSelf: 'stretch',\n    fontWeight: 'bold',\n  },\n  buttonText: {\n    margin: 8,\n    textAlign: 'center',\n    fontSize: 40,\n  },\n  buttonSelected: {\n    // teal 200 from https://material.io/design/color/the-color-system.html#tools-for-picking-colors\n    backgroundColor: '#80CBC4',\n    elevation: 4,\n    borderRadius: 2\n  },\n  buttonUnselected: {\n    // teal 50 from https://material.io/design/color/the-color-system.html#tools-for-picking-colors\n    backgroundColor: '#E0F2F1',\n    elevation: 4,\n    borderRadius: 2\n  }\n});\n\nexport default Styles\n","import React from 'react'\nimport { TouchableOpacity, View, Text } from 'react-native';\nimport Styles from './Styles.js'\n\nclass RadioButton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  buttonClicked() {\n    this.props.buttonClicked(this.props.id)\n    this.props.onPress(this.props.id)\n  }\n\n  render() {\n    return (\n      <TouchableOpacity onPress={() => this.buttonClicked()}>\n        <View style={this.props.selected ? Styles.buttonSelected : Styles.buttonUnselected}>\n          <Text style={Styles.buttonText}>\n            {this.props.title}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default RadioButton\n","import React from 'react'\nimport { View, TouchableOpacity, Text, Button } from 'react-native'\nimport BaseContext from './BaseContext.js'\nimport Styles from './Styles.js'\n\nconst GrammarTestCorrectAnswer = (props) => {\n  return (\n    <BaseContext.Consumer>\n      {({state, dispatch}) => (\n          <React.Fragment>\n            <View style={Styles.grammarTestExplanationHeader}>\n              <Text style={Styles.grammarTestCasePromptText}>Correct!</Text>\n            </View>\n            <View style={Styles.grammarTestExplanationBody}>\n              <Text style={Styles.grammarTestAnswerExplanationText}>\"{state.correctSentence}\"</Text>\n              <Text style={Styles.grammarTestAnswerExplanationText}>{state.explanation} case</Text>\n            </View>\n            <View style={Styles.grammarTestCaseContainer}>\n              <Button title=\"Next question\" onPress={ () => dispatch({type: 'REFRESH'})} />\n            </View>\n          </React.Fragment>\n        )\n      }\n    </BaseContext.Consumer>\n  )\n}\n\nexport default GrammarTestCorrectAnswer\n","import React from 'react'\nimport { Text } from 'react-native'\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\nimport Styles from './Styles.js'\n\n\nconst GrammarHelperButton = props => {\n  const {size, onPress} = props\n  return (\n    <Text onPress={onPress}>\n      <FontAwesomeIcon size={size} color=\"#888888\" icon={faQuestionCircle} />\n    </Text>\n  )\n}\n\nexport default GrammarHelperButton\n","import React from 'react'\nimport { View, TouchableOpacity, Text, Button } from 'react-native'\nimport GrammarHelperButton from './GrammarHelperButton.js';\nimport BaseContext from './BaseContext.js'\nimport Styles from './Styles.js'\n\nconst GrammarTestWrongAnswer = (props) => {\n  return (\n    <BaseContext.Consumer>\n      {({state, dispatch}) => (\n          <React.Fragment>\n            <View style={Styles.grammarTestExplanationHeader}>\n              <Text style={Styles.grammarTestCasePromptText}>Wrong</Text>\n            </View>\n            <View style={Styles.grammarTestExplanationBody}>\n              <Text style={Styles.grammarTestAnswerExplanationText}>You answered {state.selectedAnswer}</Text>\n              <Text style={Styles.grammarTestAnswerExplanationText}>The correct answer was {state.correctAnswer}</Text>\n              <Text style={Styles.grammarTestAnswerExplanationText}>\"{state.correctSentence}\"</Text>\n              <Text style={Styles.grammarTestAnswerExplanationText}>{state.explanation} case <GrammarHelperButton onPress={ () => dispatch({ type: 'SHOW_GRAMMAR_HELP' })} size={12} /></Text>\n            </View>\n            <View style={Styles.grammarTestCaseContainer}>\n              <Button title=\"Next question\" onPress={ () => dispatch({type: 'REFRESH'})} />\n            </View>\n          </React.Fragment>\n        )\n      }\n    </BaseContext.Consumer>\n  )\n}\n\nexport default GrammarTestWrongAnswer","import React from 'react'\nimport { View, TouchableOpacity, Text, Button } from 'react-native'\nimport BaseContext from './BaseContext.js'\nimport Styles from './Styles.js'\n\nconst GrammarExplanation = (props) => {\n  return (\n    <BaseContext.Consumer>\n      {({state, dispatch}) => (\n          <React.Fragment>\n            <View style={Styles.grammarTestExplanationHeader}>\n              <Text style={Styles.grammarTestCasePromptText}>{state.word}</Text>\n            </View>\n            <View style={Styles.grammarTestExplanationBody}>\n              <Text style={Styles.grammarExplanationSubHeaderText}>{state.wordDefinition.gender} {state.wordDefinition.partOfSpeech}</Text>\n              <View style={Styles.tableRow}>\n                <Text style={Styles.tableHeading}></Text>\n                <Text style={Styles.tableHeading}>Singular</Text>\n                <Text style={Styles.tableHeading}>Plural</Text>\n              </View>\n              <View style={Styles.tableRow}>\n                <Text style={Styles.tableCell}>Nominative</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.sn}</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.pn}</Text>\n              </View>\n              <View style={Styles.tableRow}>\n                <Text style={Styles.tableCell}>Accusative</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.sa}</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.pa}</Text>\n              </View>\n              <View style={Styles.tableRow}>\n                <Text style={Styles.tableCell}>Dative</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.sd}</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.pd}</Text>\n              </View>\n              <View style={Styles.tableRow}>\n                <Text style={Styles.tableCell}>Genitive</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.sg}</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.pg}</Text>\n              </View>\n              <View style={Styles.tableRow}>\n                <Text style={Styles.tableCell}>Locative</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.sl}</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.pl}</Text>\n              </View>\n              <View style={Styles.tableRow}>\n                <Text style={Styles.tableCell}>Instrumentive</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.si}</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.pi}</Text>\n              </View>\n              <View style={Styles.tableRow}>\n                <Text style={Styles.tableCell}>Vocative</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.sv}</Text>\n                <Text style={Styles.tableCell}>{state.wordDefinition.declensions.pv}</Text>\n              </View>\n            </View>\n            <View style={Styles.grammarTestCaseContainer}>\n              <Button title=\"Back to question\" onPress={ () => dispatch({type: 'HIDE_GRAMMAR_HELP'})} />\n            </View>\n          </React.Fragment>\n        )\n      }\n    </BaseContext.Consumer>\n  )\n}\n\nexport default GrammarExplanation\n","import React, { useReducer } from 'react'\nimport { Link, Switch, Route, useRouteMatch } from './routing';\nimport { View, TouchableOpacity, Text, Button } from 'react-native';\nimport Radio from './Radio.js';\nimport RadioButton from './RadioButton.js';\nimport GrammarTestReducer from './GrammarTestReducer.js';\nimport GrammarTestCorrectAnswer from './GrammarTestCorrectAnswer.js';\nimport GrammarTestWrongAnswer from './GrammarTestWrongAnswer.js';\nimport GrammarExplanation from './GrammarExplanation.js';\nimport GrammarHelperButton from './GrammarHelperButton.js';\nimport BaseContext from './BaseContext.js'\nimport { buildAnswers } from './Answers.js'\nimport Styles from './Styles.js'\n\nlet initialState = buildAnswers(new Set());\n\nconst GrammarTestQuestion = props => {\n  return (\n    <BaseContext.Consumer>\n      {({state, dispatch}) => (\n          <React.Fragment>\n            <View style={Styles.grammarTestCasePromptContainer}>\n              <Text style={Styles.grammarTestCasePromptText}>{state.prompt} <GrammarHelperButton size={24} onPress={() => dispatch({ type: 'SHOW_GRAMMAR_HELP' })} /></Text>\n              <Text style={Styles.grammarTestCaseTranslationText}>{state.translation}</Text>\n            </View>\n            <View style={Styles.grammarTestCaseContainer}>\n              <Radio>\n                {state.allAnswers.map((answer) =>\n                  <RadioButton key={answer} title={answer} id={answer} onPress={ () => dispatch(\n                    { type: 'SELECT_ANSWER', answer: answer }\n                  )} />\n                )}\n              </Radio>\n            </View> \n          </React.Fragment>\n        )\n      }\n    </BaseContext.Consumer>\n  )\n}\n\nconst GrammarTestCase = props => {\n  const [state, dispatch] = useReducer(GrammarTestReducer, initialState)\n\n  let child = {}\n\n  if(state.showGrammarHelp){\n    child = <GrammarExplanation />\n  }\n  else if(state.checkAnswers){\n    if(state.selectedAnswer == state.correctAnswer){\n      child = <GrammarTestCorrectAnswer />\n    }\n    else{\n      child = <GrammarTestWrongAnswer />\n    }\n  }\n  else{\n    child = <GrammarTestQuestion state={state} dispatch={dispatch} />\n  }\n\n  return (\n    <BaseContext.Provider value={{state: state, dispatch: dispatch}}>\n      {child}\n    </BaseContext.Provider>\n  )\n}\nexport default GrammarTestCase\n","import React from 'react'\nimport { Link, Switch, Route, useRouteMatch } from './routing';\nimport { View, TouchableOpacity, Text, Button } from 'react-native';\nimport GrammarTestCase from './GrammarTestCase.js'\nimport Styles from './Styles.js'\n\nclass GrammarTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <View style={Styles.grammarTestContainer}>\n          <GrammarTestCase />\n        </View>\n      </React.Fragment>\n    )\n  }\n}\nexport default GrammarTest\n","import React from 'react'\nimport { TouchableOpacity, Text } from 'react-native';\nimport { Link, Switch, Route, useRouteMatch } from './routing';\n\nconst Lesson1 = () => {\n  let match = useRouteMatch();\n  return (\n    <Switch>\n      <Route exact path={`${match.path}/`}>\n        <Text>Izvolite</Text>\n        <Text>Dobar dan, ja ću oko sto grama sira Edama</Text>\n        <Link to={`${match.path}/1`}><Text>Next page</Text></Link>\n      </Route>\n      <Route exact path={`${match.path}/1`}>\n        <Text>Koje hoćete?</Text>\n        <Text>Ovaj ovde</Text>\n        <Link to={`${match.path}/2`}><Text>Next page</Text></Link>\n      </Route>\n      <Route exact path={`${match.path}/2`}>\n        <Text>Važi, hoćete li rezano ili komad?</Text>\n        <Text>Samo komad, molim vas</Text>\n        <Link to={`${match.path}/3`}><Text>Next page</Text></Link>\n      </Route>\n      <Route exact path={`${match.path}/3`}>\n        <Text>Još nešto?</Text>\n        <Text>Ne, to je sve</Text>\n        <Link to={`${match.path}/4`}><Text>Next page</Text></Link>\n      </Route>\n      <Route exact path={`${match.path}/4`}>\n        <Text>Izvolite, prijatno</Text>\n        <Text>Hvala, zdravo!</Text>\n        <Link to='/index'><Text>Done</Text></Link>\n      </Route>\n    </Switch>\n  )\n}\nexport default Lesson1\n","import React from 'react'\nimport { Text, View } from 'react-native';\nimport { Link } from './routing';\n\nconst Index = () => {\n   return (\n      <View>\n        <View>\n          <Link to='/lesson1'><Text>Lesson 1</Text></Link>\n          <Link to='/grammar_test'><Text>Grammar test</Text></Link>\n        </View>\n      </View>\n   )\n}\nexport default Index\n","import React from 'react';\nimport { Router, Switch, Route } from './routing';\nimport { Platform, Text, View, Linking, TouchableOpacity } from 'react-native';\nimport { Analytics, PageHit } from 'expo-analytics';\n\nimport GrammarTest from './GrammarTest.js';\nimport Lesson1 from './Lesson1.js';\nimport Index from './Index.js';\nimport Styles from './Styles.js'\n\nexport default function App() {\n  if (__DEV__) {\n    console.log(\"Dev mode\")\n    if(Platform.OS == \"web\"){\n      const analytics = new Analytics('UA-89635433-5', {dr: document.referrer})\n    }\n    else{\n      const analytics = new Analytics('UA-89635433-5')\n    }\n  }\n  else{\n    if(Platform.OS == \"web\"){\n      const analytics = new Analytics('UA-89635433-5', {dr: document.referrer})\n      analytics.hit(new PageHit('Home'))\n    }\n    else{\n      const analytics = new Analytics('UA-89635433-5')\n      analytics.hit(new PageHit('Home'))\n    }\n  }\n\n  return (\n    <Router>\n      <View style={Styles.appContainer}>\n        <View style={Styles.appBody}>\n          <Switch>\n            <Route path='/grammar_test' component={GrammarTest} />\n            <Route path='/lesson1' component={Lesson1} />\n            <Route path='/' component={GrammarTest} />\n          </Switch>\n        </View>\n        <View style={Styles.appFooter}>\n          <TouchableOpacity onPress= { () => Linking.openURL(\"https://www.slowserbian.com\") }>\n            <Text style={Styles.footerLinkText}>slowserbian.com</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Router>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/sgt/expo-service-worker.js', { scope: '/sgt/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}