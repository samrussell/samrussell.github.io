{"version":3,"sources":["/Users/russells/dev/belgradian/Answers.js","/Users/russells/dev/belgradian/GrammarTestReducer.js","/Users/russells/dev/belgradian/BaseContext.js","/Users/russells/dev/belgradian/Radio.js","/Users/russells/dev/belgradian/Styles.js","/Users/russells/dev/belgradian/RadioButton.js","/Users/russells/dev/belgradian/GrammarTestCorrectAnswer.js","/Users/russells/dev/belgradian/GrammarTestWrongAnswer.js","/Users/russells/dev/belgradian/GrammarTestCase.js","/Users/russells/dev/belgradian/GrammarTest.js","/Users/russells/dev/belgradian/Lesson1.js","/Users/russells/dev/belgradian/Index.js","/Users/russells/dev/belgradian/App.js","/Users/russells/dev/belgradian/web-build/register-service-worker.js"],"names":["tests","require","shuffle","a","j","x","i","length","Math","floor","random","buildAnswers","test","declensions","all_answers","answer","push","prompt","replace","correctSentence","selectedAnswer","checkAnswers","translation","explanation","correctAnswer","allAnswers","GrammarTestReducer","state","action","type","BaseContext","createContext","Radio","props","Fragment","Consumer","dispatch","React","Children","map","children","child","displayName","cloneElement","buttonClicked","onPress","selected","id","Styles","StyleSheet","create","appContainer","backgroundColor","alignItems","padding","flex","appBody","appFooter","footerLinkText","justifyContent","textAlign","fontSize","color","grammarTestContainer","flexDirection","grammarTestCasePromptContainer","grammarTestCasePromptText","fontWeight","grammarTestCaseTranslationText","grammarTestCaseContainer","grammarTestExplanationHeader","grammarTestExplanationBody","grammarTestAnswerExplanationText","buttonText","margin","buttonSelected","elevation","borderRadius","buttonUnselected","RadioButton","this","TouchableOpacity","View","style","Text","title","Component","GrammarTestCorrectAnswer","Button","GrammarTestWrongAnswer","initialState","GrammarTestQuestion","key","GrammarTestCase","useReducer","Provider","value","GrammarTest","Lesson1","match","useRouteMatch","exact","path","to","Index","App","console","log","component","Linking","openURL","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.b8403f4f.chunk.js","sourcesContent":["const tests = require('./grammartests.json')\n\nfunction shuffle(a) {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n\nconst buildAnswers = () => {\n    let test = tests[\"tests\"][Math.floor(Math.random()*tests[\"tests\"].length)];\n    let declensions = tests[\"declensions\"][test[\"word\"]];\n    shuffle(declensions);\n\n    // get top 3 answers that aren't the correct one\n    let all_answers = [];\n\n    for(var i=0; all_answers.length<3 && i<declensions.length; i++){\n      let answer = declensions[i];\n      if(answer != test[\"answer\"]){\n        all_answers.push(answer)\n      }\n    }\n\n    all_answers.push(test[\"answer\"])\n    shuffle(all_answers)\n\n    let prompt = test[\"prompt\"].replace(/\\(\\)/, \"(\" + test[\"word\"] + \")\");\n    let correctSentence = test[\"prompt\"].replace(/\\(\\)/, test[\"answer\"])\n\n    return {\n      selectedAnswer: null,\n      checkAnswers: false,\n      prompt: prompt,\n      translation: test[\"translation\"],\n      explanation: test[\"explanation\"],\n      correctSentence: correctSentence,\n      correctAnswer: test[\"answer\"],\n      allAnswers: all_answers\n    };\n}\n\nexport { buildAnswers }","import { buildAnswers } from './Answers.js'\n\nconst GrammarTestReducer = (state, action) => {\n  switch (action.type) {\n    case 'SELECT_ANSWER':\n      return {\n        ...state,\n        selectedAnswer: action.answer,\n        checkAnswers: true,\n      }\n    case 'CHECK_ANSWERS':\n      return {\n        ...state,\n        checkAnswers: true,\n      }\n    case 'REFRESH':\n      return buildAnswers()\n    default:\n      return state\n  }\n}\n\nexport default GrammarTestReducer\n","import { createContext } from 'react'\n\nconst BaseContext = createContext()\n\nexport default BaseContext\n","import React, { useReducer } from 'react'\nimport GrammarTestReducer from './GrammarTestReducer.js';\nimport BaseContext from './BaseContext.js'\n\nconst Radio = props => {\n  return (\n    <React.Fragment>\n      <BaseContext.Consumer>\n        {({state, dispatch}) => (\n          React.Children.map(props.children, child => {\n            if (child.type.displayName === 'RadioButton') {\n              return React.cloneElement(child, { buttonClicked: () => {child.props.onPress}, selected: child.props.id == state.selectedAnswer })\n            }\n            return child\n          })\n          )\n        }\n      </BaseContext.Consumer>\n    </React.Fragment>\n  )\n}\n\nexport default Radio","import { StyleSheet } from 'react-native';\n\nconst Styles = StyleSheet.create({\n  appContainer: {\n    backgroundColor: '#fff',\n    alignItems: 'stretch',\n    padding: '5%',\n    flex: 1,\n  },\n  appBody: {\n    flex: 8,\n  },\n  appFooter: {\n    flex: 1,\n  },\n  footerLinkText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    fontSize: 25,\n    color: '#E65100'\n  },\n  grammarTestContainer: {\n    flexDirection: 'column',\n    flex: 1,\n    justifyContent: 'space-around',\n  },\n  grammarTestCasePromptContainer: {\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    flex: 1,\n  },\n  grammarTestCasePromptText: {\n    fontWeight: 'bold',\n    fontSize: 40,\n  },\n  grammarTestCaseTranslationText: {\n    fontSize: 20,\n  },\n  grammarTestCaseContainer: {\n    flex: 2,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  grammarTestExplanationHeader: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  grammarTestExplanationBody: {\n    flex: 4,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  grammarTestAnswerExplanationText: {\n    fontSize: 20,\n    textAlign: 'center',\n  },\n  buttonText: {\n    margin: 8,\n    textAlign: 'center',\n    fontSize: 40,\n  },\n  buttonSelected: {\n    // teal 200 from https://material.io/design/color/the-color-system.html#tools-for-picking-colors\n    backgroundColor: '#80CBC4',\n    elevation: 4,\n    borderRadius: 2\n  },\n  buttonUnselected: {\n    // teal 50 from https://material.io/design/color/the-color-system.html#tools-for-picking-colors\n    backgroundColor: '#E0F2F1',\n    elevation: 4,\n    borderRadius: 2\n  }\n});\n\nexport default Styles\n","import React from 'react'\nimport { TouchableOpacity, View, Text } from 'react-native';\nimport Styles from './Styles.js'\n\nclass RadioButton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  buttonClicked() {\n    this.props.buttonClicked(this.props.id)\n    this.props.onPress(this.props.id)\n  }\n\n  render() {\n    return (\n      <TouchableOpacity onPress={() => this.buttonClicked()}>\n        <View style={this.props.selected ? Styles.buttonSelected : Styles.buttonUnselected}>\n          <Text style={Styles.buttonText}>\n            {this.props.title}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default RadioButton\n","import React from 'react'\nimport { View, TouchableOpacity, Text, Button } from 'react-native'\nimport BaseContext from './BaseContext.js'\nimport Styles from './Styles.js'\n\nconst GrammarTestCorrectAnswer = (props) => {\n  return (\n    <BaseContext.Consumer>\n      {({state, dispatch}) => (\n          <React.Fragment>\n            <View style={Styles.grammarTestExplanationHeader}>\n              <Text style={Styles.grammarTestCasePromptText}>Correct!</Text>\n            </View>\n            <View style={Styles.grammarTestExplanationBody}>\n              <Text style={Styles.grammarTestAnswerExplanationText}>\"{state.correctSentence}\"</Text>\n              <Text style={Styles.grammarTestAnswerExplanationText}>{state.explanation} case</Text>\n            </View>\n            <View style={Styles.grammarTestCaseContainer}>\n              <Button title=\"Next question\" onPress={ () => dispatch({type: 'REFRESH'})} />\n            </View>\n          </React.Fragment>\n        )\n      }\n    </BaseContext.Consumer>\n  )\n}\n\nexport default GrammarTestCorrectAnswer\n","import React from 'react'\nimport { View, TouchableOpacity, Text, Button } from 'react-native'\nimport BaseContext from './BaseContext.js'\nimport Styles from './Styles.js'\n\nconst GrammarTestWrongAnswer = (props) => {\n  return (\n    <BaseContext.Consumer>\n      {({state, dispatch}) => (\n          <React.Fragment>\n            <View style={Styles.grammarTestExplanationHeader}>\n              <Text style={Styles.grammarTestCasePromptText}>Wrong</Text>\n            </View>\n            <View style={Styles.grammarTestExplanationBody}>\n              <Text style={Styles.grammarTestAnswerExplanationText}>You answered {state.selectedAnswer}</Text>\n              <Text style={Styles.grammarTestAnswerExplanationText}>The correct answer was {state.correctAnswer}</Text>\n              <Text style={Styles.grammarTestAnswerExplanationText}>\"{state.correctSentence}\"</Text>\n              <Text style={Styles.grammarTestAnswerExplanationText}>{state.explanation} case</Text>\n            </View>\n            <View style={Styles.grammarTestCaseContainer}>\n              <Button title=\"Next question\" onPress={ () => dispatch({type: 'REFRESH'})} />\n            </View>\n          </React.Fragment>\n        )\n      }\n    </BaseContext.Consumer>\n  )\n}\n\nexport default GrammarTestWrongAnswer","import React, { useReducer } from 'react'\nimport { Link, Switch, Route, useRouteMatch } from './routing';\nimport { View, TouchableOpacity, Text, Button } from 'react-native';\nimport Radio from './Radio.js';\nimport RadioButton from './RadioButton.js';\nimport GrammarTestReducer from './GrammarTestReducer.js';\nimport GrammarTestCorrectAnswer from './GrammarTestCorrectAnswer.js';\nimport GrammarTestWrongAnswer from './GrammarTestWrongAnswer.js';\nimport BaseContext from './BaseContext.js'\nimport { buildAnswers } from './Answers.js'\nimport Styles from './Styles.js'\n\nlet initialState = buildAnswers();\n\nconst GrammarTestQuestion = props => {\n  return (\n    <BaseContext.Consumer>\n      {({state, dispatch}) => (\n          <React.Fragment>\n            <View style={Styles.grammarTestCasePromptContainer}>\n                <Text style={Styles.grammarTestCasePromptText}>{state.prompt}</Text>\n                <Text style={Styles.grammarTestCaseTranslationText}>{state.translation}</Text>\n              </View>\n              <View style={Styles.grammarTestCaseContainer}>\n                <Radio>\n                  {state.allAnswers.map((answer) =>\n                    <RadioButton key={answer} title={answer} id={answer} onPress={ () => dispatch(\n                      { type: 'SELECT_ANSWER', answer: answer }\n                    )} />\n                  )}\n                </Radio>\n              </View> \n          </React.Fragment>\n        )\n      }\n    </BaseContext.Consumer>\n  )\n}\n\nconst GrammarTestCase = props => {\n  const [state, dispatch] = useReducer(GrammarTestReducer, initialState)\n\n  let child = {}\n\n  if(state.checkAnswers){\n    if(state.selectedAnswer == state.correctAnswer){\n      child = <GrammarTestCorrectAnswer />\n    }\n    else{\n      child = <GrammarTestWrongAnswer />\n    }\n    //dispatch({type: \"REFRESH\"})\n  }\n  else{\n    child = <GrammarTestQuestion state={state} dispatch={dispatch} />\n  }\n\n  return (\n    <BaseContext.Provider value={{state: state, dispatch: dispatch}}>\n      {child}\n    </BaseContext.Provider>\n  )\n}\nexport default GrammarTestCase\n","import React from 'react'\nimport { Link, Switch, Route, useRouteMatch } from './routing';\nimport { View, TouchableOpacity, Text, Button } from 'react-native';\nimport GrammarTestCase from './GrammarTestCase.js'\nimport Styles from './Styles.js'\n\nclass GrammarTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <View style={Styles.grammarTestContainer}>\n          <GrammarTestCase />\n        </View>\n      </React.Fragment>\n    )\n  }\n}\nexport default GrammarTest\n","import React from 'react'\nimport { TouchableOpacity, Text } from 'react-native';\nimport { Link, Switch, Route, useRouteMatch } from './routing';\n\nconst Lesson1 = () => {\n  let match = useRouteMatch();\n  return (\n    <Switch>\n      <Route exact path={`${match.path}/`}>\n        <Text>Izvolite</Text>\n        <Text>Dobar dan, ja ću oko sto grama sira Edama</Text>\n        <Link to={`${match.path}/1`}><Text>Next page</Text></Link>\n      </Route>\n      <Route exact path={`${match.path}/1`}>\n        <Text>Koje hoćete?</Text>\n        <Text>Ovaj ovde</Text>\n        <Link to={`${match.path}/2`}><Text>Next page</Text></Link>\n      </Route>\n      <Route exact path={`${match.path}/2`}>\n        <Text>Važi, hoćete li rezano ili komad?</Text>\n        <Text>Samo komad, molim vas</Text>\n        <Link to={`${match.path}/3`}><Text>Next page</Text></Link>\n      </Route>\n      <Route exact path={`${match.path}/3`}>\n        <Text>Još nešto?</Text>\n        <Text>Ne, to je sve</Text>\n        <Link to={`${match.path}/4`}><Text>Next page</Text></Link>\n      </Route>\n      <Route exact path={`${match.path}/4`}>\n        <Text>Izvolite, prijatno</Text>\n        <Text>Hvala, zdravo!</Text>\n        <Link to='/index'><Text>Done</Text></Link>\n      </Route>\n    </Switch>\n  )\n}\nexport default Lesson1\n","import React from 'react'\nimport { Text, View } from 'react-native';\nimport { Link } from './routing';\n\nconst Index = () => {\n   return (\n      <View>\n        <View>\n          <Link to='/lesson1'><Text>Lesson 1</Text></Link>\n          <Link to='/grammar_test'><Text>Grammar test</Text></Link>\n        </View>\n      </View>\n   )\n}\nexport default Index\n","import React from 'react';\nimport { Router, Switch, Route } from './routing';\nimport { Text, View, Linking, TouchableOpacity } from 'react-native';\nimport GrammarTest from './GrammarTest.js';\nimport Lesson1 from './Lesson1.js';\nimport Index from './Index.js';\nimport Styles from './Styles.js'\n\nexport default function App() {\n  console.log(Styles)\n  return (\n    <Router>\n      <View style={Styles.appContainer}>\n        <View style={Styles.appBody}>\n          <Switch>\n            <Route path='/grammar_test' component={GrammarTest} />\n            <Route path='/lesson1' component={Lesson1} />\n            <Route path='/' component={GrammarTest} />\n          </Switch>\n        </View>\n        <View style={Styles.appFooter}>\n          <TouchableOpacity onPress= { () => Linking.openURL(\"https://www.slowserbian.com\") }>\n            <Text style={Styles.footerLinkText}>slowserbian.com</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Router>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/sgt/expo-service-worker.js', { scope: '/sgt/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}